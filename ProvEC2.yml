- hosts: localhost
  gather_facts: no
  vars_files:
    - keys.yml
  tasks:
    - name: Provision instance
      ec2:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        keypair: aws_key_pair
        image: ami-0932
        assign_public_ip: yes
        vpc_subnet_id: subnet-1123
        group: demoSG
        wait: true
        exact_count: 1
        count_tag:
          Name: Demo
        instance_tags:
          Name: Demo
      register: ec2
    - debug:
        var: ec2

    - name: Add host to inventory
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: demogroup
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_ssh_private_key_file: /home/ansible/aws_key_pair.pem
      loop: "{{ ec2.instances }}"

- hosts: demogroup
  gather_facts: no
  remote_user: ec2-user
  tasks:
    - name: wait for SSH
      wait_for_connection:
        delay: 5
        timeout: 90

    - name: Check host status
      ping:

# EC2 Instance Reboot and Rename
- hosts: localhost
  gather_facts: no
  vars_files:
    - /home/ansible/keys.yml
  tasks:
    - name: Get Subnet ID and AMI ID from existing server.
      ec2_instance_facts:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        region: "{{ AWS_REGION }}"
        filters:
          tag:Name: Leo
      register: ec2_facts

    - name: Stop Leo Instance
      ec2:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        region: "{{ AWS_REGION }}"
        ec2_region: us-east-1
        state: stopped
        instance_tags:
          Name: Leo

    - name: Deploy new EC2 Instance
      ec2:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        instance_type: t2.micro
        image: "{{ ec2_facts.instances[0].image_id }}"
        assign_public_ip: yes
        vpc_subnet_id: "{{ ec2_facts.instances[0].subnet_id }}"
        instance_tags:
          Name: New
