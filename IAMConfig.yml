- hosts: localhost
  gather_facts: no
  vars_files:
    - keys.yml
  tasks:
    - name: Create new IAM user
      iam:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        iam_type: user
        state: present
        name: demouser
        password: temp123demo!
    - name: Create new group with policy and add user
      iam_group:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: testgroup
        managed_policy:
          - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        users:
          - demouser
        state: present

# Look up policy

- hosts: localhost
  gather_facts: no
  vars_files:
    - keys.yml
  tasks:
    - name: Create new IAM role
      iam_role:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: ansibleRole
        assume_role_policy_document: "{{ lookup('file','policy.json') }}"
        description: This role was created by Ansible!
      register: iam_role
    - debug:
        var: iam_role

# Rotating Policy Keys

- hosts: localhost
  gather_facts: no
  vars_files:
    - keys.yml
  tasks:
    - name: Get access key
      iam:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        region: "{{ AWS_REGION}}"
        iam_type: user
        name: testuser
        state: present
      register: iam_info

    - name: Remove original key
      iam:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        region: "{{ AWS_REGION}}"
        iam_type: user
        name: testuser
        state: update
        access_key_ids: "{{ iam_info.user_meta.access_keys[0].access_key_id }}"
        access_key_state: remove

    - name: Create new key
      iam:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        region: "{{ AWS_REGION}}"
        iam_type: user
        name: testuser
        state: update
        access_key_state: create
      register: new_key

    - name: Store new access key information
      lineinfile:
        create: yes
        path: /home/ansible/newkey.txt
        mode: 0600
        line: "{{ new_key.created_keys[0].access_key_id }}"

    - name: Store new secret key information
      lineinfile:
        path: /home/ansible/newkey.txt
        line: "{{ new_key.created_keys[0].secret_access_key }}"
